version: "3.9"
services:
  pfa-server:
    build: ./A_PFAServer
    image: fabreguesm/projectflexxagent-server:1.0.3
    ports:
      - "8000:8000"
    environment:
      # Environment settings
      ENVIRONMENT: ${SERVER_ENVIRONMENT:-development}
      DEBUG: ${SERVER_DEBUG:-true}
      PYTHONUNBUFFERED: 1
 
      # Feature flags
      ENABLE_CACHING: ${SERVER_ENABLE_CACHING:-true}
      ENABLE_METRICS: ${SERVER_ENABLE_METRICS:-true}
      ENABLE_AUDIT_LOGGING: ${SERVER_ENABLE_AUDIT_LOGGING:-true}
 
      # Database configuration
      DATABASE_HOST: ${DATABASE_HOST:-10.250.0.68}
      DATABASE_PORT: ${DATABASE_PORT:-5003}
      DATABASE_NAME: ${DATABASE_NAME:-pfaserver}
      DATABASE_USER: ${DATABASE_USER:-flexxus}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-Flexxus2023**}
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE:-10}
      DATABASE_MAX_OVERFLOW: ${DATABASE_MAX_OVERFLOW:-20}
      DATABASE_POOL_TIMEOUT: ${DATABASE_POOL_TIMEOUT:-30}
 
      # Cache configuration
      CACHE_MODELS_DATA_TTL: ${CACHE_MODELS_DATA_TTL:-600}
      CACHE_MODEL_CONFIG_TTL: ${CACHE_MODEL_CONFIG_TTL:-1800}
      CACHE_STATS_TTL: ${CACHE_STATS_TTL:-300}
      CACHE_DEFAULT_TTL: ${CACHE_DEFAULT_TTL:-300}
      CACHE_MAX_SIZE: ${CACHE_MAX_SIZE:-500}
      CACHE_CLEANUP_INTERVAL: ${CACHE_CLEANUP_INTERVAL:-60}
 
      # Logging configuration
      LOG_LEVEL: ${LOG_LEVEL:-DEBUG}
      LOG_FORMAT: ${LOG_FORMAT:-pretty}
      LOG_ENABLE_CONSOLE: ${LOG_ENABLE_CONSOLE:-true}
      LOG_ENABLE_FILE: ${LOG_ENABLE_FILE:-true}
      LOG_FILE_PATH: ${LOG_FILE_PATH:-logs/pfaserver.log}
      LOG_MAX_FILE_SIZE: ${LOG_MAX_FILE_SIZE:-10485760}
      LOG_BACKUP_COUNT: ${LOG_BACKUP_COUNT:-5}
 
      # Server configuration
      SERVER_API_VERSION: ${SERVER_API_VERSION:-2.1.0}
      SERVER_INSTANCE_NAME: ${SERVER_INSTANCE_NAME:-pfa-server-docker}
      SERVER_DATABASE_VERSION: ${SERVER_DATABASE_VERSION:-PostgreSQL 15.3}
      SERVER_SUPPORT_CONTACT: ${SERVER_SUPPORT_CONTACT:-support@pfaserver.com}
 
      # API Provider configuration
      API_OPENAI_ENDPOINT: ${API_OPENAI_ENDPOINT:-https://api.openai.com/v1}
      API_ANTHROPIC_ENDPOINT: ${API_ANTHROPIC_ENDPOINT:-https://api.anthropic.com}
      API_MOONSHOT_ENDPOINT: ${API_MOONSHOT_ENDPOINT:-https://api.moonshot.cn}
 
      # Security configuration - API Keys
      SECURITY_OPENAI_API_KEY: ${OPENAI_API_KEY}
      SECURITY_ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      SECURITY_MOONSHOT_API_KEY: ${MOONSHOT_API_KEY}
 
      # Security settings
      SECURITY_ENABLE_CORS: ${SECURITY_ENABLE_CORS:-true}
      SECURITY_ALLOWED_ORIGINS: ${SECURITY_ALLOWED_ORIGINS:-http://10.250.0.68:4375,http://127.0.0.1:4375}
      SECURITY_ENABLE_RATE_LIMITING: ${SECURITY_ENABLE_RATE_LIMITING:-true}
      SECURITY_RATE_LIMIT_REQUESTS: ${SECURITY_RATE_LIMIT_REQUESTS:-100}
    volumes:
      - server-logs:/app/logs
    networks:
      - traefik
    deploy:
      placement:
        constraints: ["${NODE}"]      
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8000/health || echo 'Health check failed but continuing...'"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 120s
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: loki
      options:
        loki-url: ${LOKI_URL}
 
  pfa-client:
    build: ./D_PFAShadCNClient
    image: fabreguesm/projectflexxagent-cliente:1.0.3
    ports:
      - "4375:4375"
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://10.250.0.68:8000
      NEXT_PUBLIC_FRONTEND_URL: ${CLIENT_FRONTEND_URL:-http://10.250.0.68:4375}
      NEXT_PUBLIC_SESSION_PREFIX: ${CLIENT_SESSION_PREFIX:-pfa_}
      NEXT_PUBLIC_LOCAL_PREFIX: ${CLIENT_LOCAL_PREFIX:-pfa_config_}
      NODE_ENV: production
    networks:
      - traefik
    deploy:
      placement:
        constraints: ["${NODE}"]
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4375 || echo 'Client health check failed but continuing...'"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 120s
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: loki
      options:
        loki-url: ${LOKI_URL}
 
networks:
  traefik:
    external:
      name: traefik
 
volumes:
  server-logs:
  volumes:  
  flexx-agent-com-ar:
    name: "${SERVICE_NAME}_flexx-agent-com-ar"
 
